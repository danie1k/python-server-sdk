version: 2.1

orbs:
   win: circleci/windows@1.0.0

workflows:
  test:
    jobs:
      - test-2-7
      - test-3-3
      - test-3-4
      - test-3-5
      - test-3-6
      - test-3-7
      - test-3-8
      - test-windows

test-template: &test-template
  steps:
    - checkout
    - run:
        name: install requirements
        command: |
          sudo pip install --upgrade pip virtualenv;
          sudo pip install -r test-requirements.txt;
          if [[ "$CIRCLE_JOB" != "test-3.3" ]]; then
            sudo pip install -r test-filesource-optional-requirements.txt;
          fi;
          if [[ "$CIRCLE_JOB" != "test-3.3" ]] && [[ "$CIRCLE_JOB" != "test-3.4" ]]; then
            sudo pip install -r consul-requirements.txt;
          fi;
          sudo python setup.py install;
          pip freeze
    - run:
        name: run tests
        command: |
          mkdir test-reports;
          if [[ "$CIRCLE_JOB" == "test-2.7" ]]; then
            pytest -s --cov=ldclient --junitxml=test-reports/junit.xml testing -W error::SyntaxWarning;
            sh -c '[ -n "${CODECLIMATE_REPO_TOKEN+1}" ] && codeclimate-test-reporter || echo "No CODECLIMATE_REPO_TOKEN value is set; not publishing coverage report"';
          else
            pytest -s --junitxml=test-reports/junit.xml testing -W error::SyntaxWarning;
          fi
    - run:
        name: test packaging/install
        # Note, virtualenv isn't supported on Python 3.3 and this test requires virtualenv. But we
        # never build our published package on 3.3 anyway.
        command: |
          if [[ "$CIRCLE_JOB" != "test-3.3" ]]; then
            sudo rm -rf dist *.egg-info;
            ./test-packaging/test-packaging.sh;
          fi
    - store_test_results:
        path: test-reports
    - store_artifacts:
        path: test-reports

jobs:
  test-2-7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7-jessie
      - image: redis
      - image: amazon/dynamodb-local
      - image: consul
  test-3-3:
    <<: *test-template
    docker:
      - image: circleci/python:3.3-jessie
      - image: redis
      - image: amazon/dynamodb-local
      # python-consul doesn't support Python 3.3
  test-3-4:
    <<: *test-template
    docker:
      - image: circleci/python:3.4-jessie
      - image: redis
      - image: amazon/dynamodb-local
      # python-consul doesn't support Python 3.4
  test-3-5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5-jessie
      - image: redis
      - image: amazon/dynamodb-local
      - image: consul
  test-3-6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6-jessie
      - image: redis
      - image: amazon/dynamodb-local
      - image: consul
  test-3-7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7-stretch
      - image: redis
      - image: amazon/dynamodb-local
      - image: consul
  test-3-8:
    <<: *test-template
    docker:
      - image: circleci/python:3.8-buster
      - image: redis
      - image: amazon/dynamodb-local
      - image: consul

  test-windows:
    executor:
      name: win/vs2019
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: install Python 2.7
          command: |
            $ProgressPreference = "SilentlyContinue"  # prevents console errors from CircleCI host
            iwr -outf python-2.7.16.amd64.msi https://www.python.org/ftp/python/2.7.16/python-2.7.16.amd64.msi
            Start-Process msiexec.exe -Wait -ArgumentList '/I python-2.7.16.amd64.msi /quiet'
      - run:
          name: set up DynamoDB
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf dynamo.zip https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.zip
            mkdir dynamo
            Expand-Archive -Path dynamo.zip -DestinationPath dynamo
            cd dynamo
            javaw -D"java.library.path=./DynamoDBLocal_lib" -jar DynamoDBLocal.jar
          background: true
      - run:
          name: set up Consul
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf consul.zip https://releases.hashicorp.com/consul/1.4.2/consul_1.4.2_windows_amd64.zip
            mkdir consul
            Expand-Archive -Path consul.zip -DestinationPath consul
            cd consul
            sc.exe create "Consul" binPath="$(Get-Location)/consul.exe agent -dev"
            sc.exe start "Consul"
      - run:
          name: start Redis
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf redis.zip https://github.com/MicrosoftArchive/redis/releases/download/win-3.0.504/Redis-x64-3.0.504.zip
            mkdir redis
            Expand-Archive -Path redis.zip -DestinationPath redis
            cd redis
            ./redis-server --service-install
            ./redis-server --service-start
            Start-Sleep -s 5
            ./redis-cli ping
      - run:
          name: install requirements
          command: |
            $env:Path += ";C:\Python27\;C:\Python27\Scripts\"
            python --version
            pip install -r test-requirements.txt
            pip install -r consul-requirements.txt
            python setup.py install
      - run:
          name: run tests
          command: |
            mkdir test-reports
            $env:Path += ";C:\Python27\;C:\Python27\Scripts\"
            python -m pytest -s --junitxml=test-reports/junit.xml testing;
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
